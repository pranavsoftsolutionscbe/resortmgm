{"version":3,"file":"report-tool-tools-report-tool.mjs","sources":["../../../projects/report-tool/tools/report-tool/report-tool.service.ts","../../../projects/report-tool/tools/report-tool/report-tool.component.ts","../../../projects/report-tool/tools/report-tool/report-tool.component.html","../../../projects/report-tool/tools/report-tool/report-tool.module.ts","../../../projects/report-tool/tools/report-tool/public-api.ts","../../../projects/report-tool/tools/report-tool/report-tool-tools-report-tool.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReportToolService {\n\n  constructor() { }\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChange,\n  SimpleChanges,\n} from \"@angular/core\";\nimport { formatDate } from \"@angular/common\";\nimport { Observable } from \"rxjs\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { SelectItem } from \"primeng/api\";\n\nimport {\n  IDateRange,\n  IFilterReportDetails,\n  IMenuItem,\n  IMyReportDetails,\n  IReportDynamic,\n  IReportHeads,\n  IReportHeadsCUD,\n  IReportHeadsDetail,\n  IReportPortReq,\n  IReportRow,\n  ITreeNode,\n  IUrlRequestParams,\n  OrientationType,\n} from \"report-tool/models\";\nimport {\n  dateRange,\n  fillColor,\n  FilterByRef,\n  ListType,\n  OrderByPref,\n  SampleReport,\n  validDetails,\n  validFilterField,\n  validGrandTotal,\n  validGroupBy,\n  validGroupingEligible,\n  validGroupTotal,\n  validOrderBy,\n  validRunningTotal,\n  validSumField,\n} from \"report-tool/core\";\n\n@Component({\n  selector: \"lib-report-tool\",\n  templateUrl: \"./report-tool.component.html\",\n  styleUrls: [\"./report-tool.component.css\"],\n})\nexport class ReportToolComponent implements OnChanges {\n  reportTreeNode: ITreeNode<number>[] = [];\n  reportList: IReportHeadsDetail[] = [];\n  reportHeads: IReportHeads = {};\n  reportDetails: IMyReportDetails[] = [];\n\n  pdDateRange: SelectItem[] = [];\n\n  phDateFormat = \"dd-MM-yyyy\";\n\n  validViewDisabled = validDetails;\n  validOrderBy = validOrderBy;\n  validGroupingEligible = validGroupingEligible;\n  validGroupBy = validGroupBy;\n  validSumField = validSumField;\n  validRunningTotal = validRunningTotal;\n  validGroupTotal = validGroupTotal;\n  validGrandTotal = validGrandTotal;\n  validFilterField = validFilterField;\n\n  @Input() showList = true;\n  @Input() currentTime = new Date();\n  @Input() reportPort: IReportPortReq = {};\n  @Input() obsReportList: Observable<IReportHeadsDetail[]>;\n  @Input() obsReportHeads: Observable<IReportHeads>;\n  @Input() obsReportDetails: Observable<IMyReportDetails[]>;\n\n  @Output() onSelectReport = new EventEmitter<number>();\n  @Output() onLedgerQuery = new EventEmitter<string>();\n  @Output() onComboQuery = new EventEmitter<string>();\n  @Output() onReportEvent = new EventEmitter<IUrlRequestParams>();\n  @Output() onSaveReport = new EventEmitter<IReportHeadsCUD>();\n\n  @Input() reportMetadataCols: any;\n  sampleReport = SampleReport;\n\n  @Input() pdStyleSheets: IMenuItem<any>[] = [];\n\n  @Input() private numberFormat: string;\n\n  constructor(private toastr: ToastrService) {\n    this.initialize();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.obsReportList && changes.obsReportList) {\n      this.getReportList();\n    }\n    if (this.obsReportHeads && changes.obsReportHeads) {\n      this.getReportHeads();\n    }\n    if (this.obsReportDetails && changes.obsReportDetails) {\n      this.getReportDetails();\n    }\n    if (this.isChange(changes.reportPort)) {\n      this.reportPort = {\n        ...changes.reportPort.previousValue,\n        ...changes.reportPort.currentValue,\n      };\n    }\n  }\n\n  onChangeDateRange(): void {\n    const { DateDefault } = this.reportHeads;\n    const { FromDate, ToDate } = this.reportPort;\n    const dateRange: IMenuItem<IDateRange> = this.dateRangeList.find(\n      (f) => f.value === DateDefault\n    ) || {\n      value: \"Today\",\n    };\n    const data: IDateRange = dateRange.data || {};\n    this.reportPort.FromDate = data.FromDate || FromDate;\n    this.reportPort.ToDate = data.ToDate || ToDate;\n  }\n\n  toggleOrderByField(field = \"OrderByRemove\"): void {\n    const detail = this.reportDetails.find(\n      (f) => f.RDAutoId === this.reportPort[field]\n    );\n    if (detail) {\n      detail.OrderBy = !detail.OrderBy;\n      detail.OrderByPref = detail.OrderByPref || OrderByPref.ASC;\n      this.reportPort[field] = 0;\n    }\n  }\n\n  toggleOrderByPref(detail: IMyReportDetails): void {\n    detail.OrderByPref =\n      detail.OrderByPref === OrderByPref.DESC\n        ? OrderByPref.ASC\n        : OrderByPref.DESC;\n  }\n\n  toggleGroupByField(isGroupBy = true, fixedGroup = false): void {\n    const setMetadataColumns = (columns: any, index = 0, gIndex = 1) => {\n      const detail = this.reportDetails[index];\n      if ((columns || {}).field) {\n        setMetadataColumns(columns.columns, index, gIndex + 1);\n      } else {\n        if (detail) {\n          if (detail.GroupByAdd) {\n            detail.GroupBy = true;\n            detail.GroupByAdd = false;\n            columns = columns || {};\n            columns.header = \"\";\n            columns.label = detail.DisplayName;\n            columns.field = detail.MyFieldName;\n            columns.columns = {};\n            columns.gIndex = gIndex;\n            setMetadataColumns(columns.columns, index + 1, gIndex + 1);\n          } else {\n            setMetadataColumns(columns, index + 1, gIndex);\n          }\n        } else {\n          this.setSumFields();\n        }\n      }\n    };\n    const removeMetadataColumns = () => {\n      this.reportMetadataCols = null;\n      this.reportDetails.forEach((detail) => {\n        detail.GroupBy = false;\n        detail.GroupByAdd = false;\n      });\n    };\n    this.reportMetadataCols = this.reportMetadataCols || {};\n    if (fixedGroup) {\n      this.toastr.warning(`Fixed Group not modified`);\n    } else {\n      if (isGroupBy) {\n        setMetadataColumns(this.reportMetadataCols);\n      } else {\n        removeMetadataColumns();\n      }\n    }\n  }\n\n  toggleSumField(field: string, isAdd = true): void {\n    const value = field === \"GrandTotal\" ? (isAdd ? 1 : 0) : isAdd;\n    this.reportDetails.forEach((detail) => {\n      if (detail.SumField && (detail.SumFieldAdd || !isAdd)) {\n        detail[field] = value;\n      }\n    });\n    this.setSumFields();\n  }\n\n  toggleFilterField(detail: IMyReportDetails): void {\n    this.reportPort.FilterField = detail.RDAutoId;\n    this.reportPort.ddFilterOperator =\n      detail.DType.toLowerCase() === \"string\"\n        ? FilterByRef.String\n        : FilterByRef.Number;\n    this.reportPort.ddFilterListAll = [];\n    this.reportPort.ddFilterList = [];\n    this.reportPort.FilterOperator = this.reportPort.ddFilterOperator[0].value;\n    this.reportPort.FilterCondition = \"\";\n    if (detail.ComboQuery) {\n      const query = this.replaceQueryValues(detail.ComboQuery);\n      this.onComboQuery.emit(query);\n    }\n  }\n\n  onSearchFilterList(query: string): void {\n    this.reportPort.ddFilterList = this.reportPort.ddFilterListAll.filter((f) =>\n      (f || \"\").toLowerCase().includes(query.trim().toLowerCase())\n    );\n  }\n\n  addToFilterField(): void {\n    const detail = this.reportDetails.find(\n      (f) => f.RDAutoId === this.reportPort.FilterField\n    );\n    this.reportPort.FilterCondition = (\n      this.reportPort.FilterCondition || \"\"\n    ).trim();\n    if (detail && this.reportPort.FilterCondition.length) {\n      const { FieldsName, DType } = detail;\n      const condition = this.reportPort.FilterCondition;\n      const operator = this.reportPort.FilterOperator;\n      const filterField = this.reportPort.FilterFieldList.find(\n        (f) =>\n          f.RDAutoId === detail.RDAutoId &&\n          f.FilterOperator === this.reportPort.FilterOperator\n      );\n      if (filterField) {\n        const filterOperator = this.reportPort.ddFilterOperator.find(\n          (f) => f.label === this.reportPort.FilterOperator\n        );\n        if (filterOperator.value) {\n          const conditions = filterField.FilterCondition.split(\",\");\n          if (!conditions.includes(condition)) {\n            conditions.push(condition);\n            filterField.FilterCondition = conditions.join();\n            filterField.WhereCondition = FilterByRef.WhereCondition(\n              FieldsName,\n              operator,\n              condition\n            );\n          }\n        } else {\n          this.toastr.warning(\n            `\"${detail.DisplayName}\" field condition already added.\\nDelete the existing condition and proceed`\n          );\n        }\n      } else {\n        const data: IFilterReportDetails = {\n          RDAutoId: detail.RDAutoId,\n          FieldsName: detail.FieldsName,\n          DisplayName: detail.DisplayName,\n          MyFieldName: detail.MyFieldName,\n          FilterOperator: this.reportPort.FilterOperator,\n          FilterCondition: condition,\n          WhereCondition: FilterByRef.WhereCondition(\n            FieldsName,\n            operator,\n            condition\n          ),\n        };\n        this.reportPort.FilterFieldList.push(data);\n      }\n    }\n  }\n\n  onChangeStyleSheet(): void {}\n\n  doSave(): void {\n    const removeFields = [\"ReportId\", \"RDAutoId\"];\n    const head: IReportHeads = Object.keys(this.reportHeads).reduce(\n      (init, key) => {\n        if (!removeFields.includes(key) || !this.reportHeads.IsStdReport) {\n          init[key] = this.reportHeads[key];\n        }\n        return init;\n      },\n      {}\n    );\n    const details = this.reportDetails.map((item) => {\n      const detail = Object.keys(item).reduce((init, key) => {\n        if (!removeFields.includes(key) || !head.IsStdReport) {\n          init[key] = item[key];\n        }\n        return init;\n      }, {});\n      return detail;\n    });\n    let count = 1;\n    const saveReportHead = () => {\n      const request: IReportHeadsCUD = {\n        MyReportHead: head,\n        MyReportDetails: details,\n      };\n      this.onSaveReport.emit(request);\n    };\n    const askReportName = (rName = head.ReportName) => {\n      const reportName = prompt(\"Report Name is already exist\", rName);\n      if (reportName) {\n        checkExistingName(reportName);\n      } else {\n        // askReportName();\n      }\n    };\n    const checkExistingName = (reportName = head.ReportName) => {\n      if (this.isExistReportName(reportName)) {\n        ++count;\n        askReportName(reportName);\n      } else {\n        head.ReportName = reportName;\n        head.IsStdReport = false;\n        saveReportHead();\n      }\n    };\n    if (head.IsStdReport) {\n      checkExistingName();\n    } else {\n      checkExistingName();\n    }\n  }\n\n  getReport(): void {\n    if (\n      !(this.reportHeads.LedgerFieldName || \"\").trim().length ||\n      this.reportPort.LedgerValue\n    ) {\n      const urlRequest: IUrlRequestParams = {\n        Title: this.reportHeads.ReportName,\n        columns: this.reportColumns,\n        reportMetaDataColumns: this.reportMetadataCols,\n        orientation: this.reportHeads.Portrait\n          ? OrientationType.Portrait\n          : OrientationType.Landscape,\n        pageSize: this.reportHeads.PaperSize,\n        sqlRequest: this.sqlQuery,\n        CustId: this.reportHeads.Cust_ID,\n        bgColor: this.fillColor,\n        numberFormat: this.numberFormat,\n      };\n      this.onReportEvent.emit(urlRequest);\n    } else {\n      this.toastr.warning(`Please select ${this.reportHeads.WarningMessage}`);\n    }\n  }\n\n  private initialize(): void {\n    this.reportList = [];\n    this.reportHeads = { DateDefault: this.reportHeads.DateDefault || \"Today\" };\n    this.reportDetails = [];\n    this.reportMetadataCols = {};\n    this.reportPort = {\n      FromDate: this.currentTime,\n      ToDate: this.currentTime,\n      LedgerList: [],\n      ddFilterOperator: [],\n      ddFilterListAll: [],\n      ddFilterList: [],\n      FilterFieldList: [],\n    };\n    this.pdDateRange = dateRange;\n  }\n\n  private getReportList(): void {\n    this.obsReportList.subscribe((result) => {\n      this.reportList = result;\n      this.setTreeNode();\n    });\n  }\n\n  private getReportHeads(): void {\n    this.obsReportHeads.subscribe((result) => {\n      this.reportHeads = result;\n      this.reportHeads.DateDefault = result.DateDefault || \"Today\";\n      this.onChangeDateRange();\n      this.setLedgerQuery();\n    });\n  }\n\n  private getReportDetails(): void {\n    this.obsReportDetails.subscribe((result) => {\n      this.reportDetails = result.map((detail) => {\n        return {\n          ...detail,\n          GroupByAdd: detail.GroupBy,\n          MyFieldName: detail.DisplayName.replace(/[^a-zA-Z0-9]/g, \"\"),\n        };\n      });\n      this.toggleGroupByField();\n      this.onChangeStyleSheet();\n    });\n  }\n\n  private setTreeNode(): void {\n    this.reportTreeNode = [];\n    this.reportTreeNode = this.reportList.map((item) => {\n      const node: ITreeNode<number> = {\n        label: item.ReportGroup,\n        data: item.MasterId,\n        type: ListType.GROUP,\n        children: [],\n      };\n      node.children = item.MyReportHead.map((subItem) => {\n        return {\n          label: subItem.ReportName,\n          data: subItem.ReportId,\n          type: ListType.LEDGER,\n        };\n      });\n      return node;\n    });\n  }\n\n  private setLedgerQuery(): void {\n    const { LedgerFieldName, LedgerQuery } = this.reportHeads;\n    if ((LedgerQuery || \"\").trim().length) {\n      const splitted = (LedgerFieldName || \"\").split(\".\");\n      this.reportPort.LedgerField = splitted[splitted.length - 1];\n      const query = this.replaceQueryValues(LedgerQuery);\n      this.onLedgerQuery.emit(query);\n    }\n  }\n\n  private replaceQueryValues(query: string): string {\n    const { Cust_ID } = this.reportHeads;\n    const DT1 = formatDate(this.reportPort.FromDate, \"yyyy-MM-dd\", \"en-IN\");\n    const DT2 = formatDate(this.reportPort.ToDate, \"yyyy-MM-dd\", \"en-IN\");\n    const LedgerValue = this.reportPort.LedgerValue || 0;\n    const LedgerField = this.reportPort.LedgerField;\n    return query\n      .split(\"#Cust_ID\")\n      .join(Cust_ID.toString())\n      .split(\"#DT1\")\n      .join(`'${DT1}'`)\n      .split(\"#DT2\")\n      .join(`'${DT2}'`)\n      .split(`#${LedgerField}`)\n      .join(LedgerValue.toString());\n  }\n\n  private setSumFields(): void {\n    const subTotalFields = this.reportDetails.reduce((init, current) => {\n      if (current.GroupTotal) {\n        init.push(current.MyFieldName);\n      }\n      return init;\n    }, []);\n    this.reportMetadataCols = this.reportMetadataCols || {};\n    const setMetadataColumns = (columns: any) => {\n      if ((columns || {}).field) {\n        columns.subTotal = subTotalFields;\n        setMetadataColumns(columns.columns);\n      }\n    };\n    setMetadataColumns(this.reportMetadataCols);\n  }\n\n  private isExistReportName(name: string): boolean {\n    return this.reportList.some((s) =>\n      s.MyReportHead.some(\n        (ss) => ss.ReportName.trim().toLowerCase() === name.trim().toLowerCase()\n      )\n    );\n  }\n\n  private isChange(data: SimpleChange): boolean {\n    if (data) {\n      const previous = JSON.stringify(data.previousValue);\n      const current = JSON.stringify(data.currentValue);\n      return previous !== current;\n    }\n    return false;\n  }\n\n  get fillColor(): IReportRow {\n    return {\n      header: fillColor.header.replace(\"#\", \"\"),\n      odd: (this.reportHeads.Record1Color || fillColor.odd).replace(\"#\", \"\"),\n      even: (this.reportHeads.Record2Color || fillColor.even).replace(\"#\", \"\"),\n      group: fillColor.group.replace(\"#\", \"\"),\n      subgroup: fillColor.subgroup.replace(\"#\", \"\"),\n      groupTotal: (\n        this.reportHeads.GroupTotalColor || fillColor.groupTotal\n      ).replace(\"#\", \"\"),\n      grandTotal: (\n        this.reportHeads.GrandTotalColor || fillColor.grandTotal\n      ).replace(\"#\", \"\"),\n    };\n  }\n\n  private get sqlQuery(): string {\n    const { SqlQuery, WhereCondition, LedgerFieldName } = this.reportHeads;\n\n    // Columns Query\n    const columns = this.reportDetails.reduce((init, current) => {\n      if (!current.ViewDisabled) {\n        const fieldName = current.MyFieldName;\n        const queryName = this.replaceQueryValues(current.FieldsName);\n        init.push(`${fieldName}=${queryName}`);\n      }\n      return init;\n    }, []);\n\n    // Where Condition\n    let Where = \"\";\n    if ((WhereCondition || \"\").length) {\n      Where = this.replaceQueryValues(WhereCondition);\n    }\n    Where = this.reportPort.FilterFieldList.reduce((init, current) => {\n      const query = this.replaceQueryValues(current.WhereCondition);\n      init += `${init.length ? \" and\" : \"\"} ${query}`;\n      return init;\n    }, Where as string);\n    if (this.reportPort.LedgerField && this.reportPort.LedgerValue) {\n      Where =\n        (Where.length ? Where + \" AND \" : \"\") +\n        LedgerFieldName +\n        \"=\" +\n        this.reportPort.LedgerValue;\n    }\n    Where = Where.length ? \"WHERE \" + Where : \"\";\n\n    // OrderBy Columns\n    const OrderBy = this.reportDetails\n      .filter((f) => !f.ViewDisabled)\n      .reduce((init, current, i) => {\n        if (current.OrderBy) {\n          const orderByPref = current.OrderByPref;\n          init.push(`${i + 1} ${orderByPref}`);\n        }\n        return init;\n      }, []);\n\n    return `SELECT ${columns.join()} ${SqlQuery} ${Where} ORDER BY ${OrderBy.join()}`;\n  }\n\n  private get dateRangeList(): IMenuItem<IDateRange>[] {\n    const today = this.currentTime;\n    const year = today.getFullYear();\n    const month = today.getMonth();\n    const date = today.getDate();\n    const day = today.getDay();\n    const quarter = Math.floor(month / 3);\n    const weekStart = new Date(year, month, date - day);\n    const monthStart = new Date(year, month, 1);\n    const quarterStart = new Date(year, quarter * 3, 1);\n    const yearStart = new Date(year, 0, 1);\n    const yesterDay = new Date(year, month, date - 1);\n    const lastWeekStart = new Date(year, month, date - (day + 7));\n    const lastWeekEnd = new Date(year, month, date - (day + 1));\n    const lastMonthStart = new Date(year, month - 1, 1);\n    const lastMonthEnd = new Date(year, month, 0);\n    const lastQuarterStart = new Date(year, quarter * 3 - 3, 1);\n    const lastQuarterEnd = new Date(year, quarter * 3, 0);\n    const dateRange: IMenuItem<IDateRange>[] = this.pdDateRange;\n    return (dateRange || []).map((item) => {\n      item.data = { ...item };\n      if (item.value === \"Today\") {\n        item.data.FromDate = today;\n        item.data.ToDate = today;\n      } else if (item.value === \"This Week To Date\") {\n        item.data.FromDate = weekStart;\n        item.data.ToDate = today;\n      } else if (item.value === \"This Month To Date\") {\n        item.data.FromDate = monthStart;\n        item.data.ToDate = today;\n      } else if (item.value === \"This Quarter To Date\") {\n        item.data.FromDate = quarterStart;\n        item.data.ToDate = today;\n      } else if (item.value === \"This Fiscal Year To Date\") {\n        item.data.FromDate = yearStart;\n        item.data.ToDate = today;\n      } else if (item.value === \"Yesterday\") {\n        item.data.FromDate = yesterDay;\n        item.data.ToDate = yesterDay;\n      } else if (item.value === \"Last Week\") {\n        item.data.FromDate = lastWeekStart;\n        item.data.ToDate = lastWeekEnd;\n      } else if (item.value === \"Last Month\") {\n        item.data.FromDate = lastMonthStart;\n        item.data.ToDate = lastMonthEnd;\n      } else if (item.value === \"Last Quarter\") {\n        item.data.FromDate = lastQuarterStart;\n        item.data.ToDate = lastQuarterEnd;\n      }\n      return { ...item };\n    });\n  }\n\n  private get reportColumns(): any[] {\n    const totalWidth = this.reportDetails.reduce((init, current) => {\n      if (!(current.ViewDisabled || current.ZoomField || current.GroupBy)) {\n        init += current.Width || 0;\n      }\n      return init;\n    }, 0);\n    const widthDivision = totalWidth / 95;\n    return this.reportDetails.reduce((init, current) => {\n      if (!(current.ViewDisabled || current.ZoomField || current.GroupBy)) {\n        const col = {\n          header: current.DisplayName,\n          field: current.MyFieldName,\n          type: current.DType.toLowerCase(),\n          width: current.Width,\n          PdfWidth: current.Width / widthDivision,\n          ExcelWidth: current.Width / 8,\n        };\n        init.push(col);\n      }\n      return init;\n    }, []);\n  }\n}\n","<div class=\"container-fluid\">\r\n  <div class=\"row row-eq-height\">\r\n    <div class=\"col-md-3 pe-0\" *ngIf=\"showList\">\r\n      <div class=\"card h-100\">\r\n        <div class=\"card-body\">\r\n          <div class=\"input-group\">\r\n            <span class=\"input-group-text\">\r\n              <i class=\"fa fa-search\"></i>\r\n            </span>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              placeholder=\"Search report...\"\r\n              #searchReport\r\n            />\r\n          </div>\r\n          <div class=\"accordion accordion-flush\" id=\"reportList\">\r\n            <ng-container *ngFor=\"let report of reportTreeNode\">\r\n              <div class=\"accordion-item\">\r\n                <h2 class=\"accordion-header\" id=\"report-head-{{ report.data }}\">\r\n                  <button\r\n                    class=\"accordion-button collapsed\"\r\n                    type=\"button\"\r\n                    data-bs-toggle=\"collapse\"\r\n                    attr.data-bs-target=\"#report-body-{{ report.data }}\"\r\n                    aria-expanded=\"false\"\r\n                    attr.aria-controls=\"report-body-{{ report.data }}\"\r\n                  >\r\n                    {{ report.label }}\r\n                  </button>\r\n                </h2>\r\n                <div\r\n                  id=\"report-body-{{ report.data }}\"\r\n                  class=\"accordion-collapse collapse\"\r\n                  aria-labelledby=\"report-head-{{ report.data }}\"\r\n                  data-bs-parent=\"#reportList\"\r\n                >\r\n                  <div class=\"list-group list-group-flush\">\r\n                    <a\r\n                      *ngFor=\"let subReport of report.children\"\r\n                      href=\"javascript:void(0)\"\r\n                      class=\"list-group-item list-group-item-action text-truncate\"\r\n                      [class.active]=\"subReport.data == reportHeads.ReportId\"\r\n                      [title]=\"subReport.label\"\r\n                      (click)=\"onSelectReport.emit(subReport.data)\"\r\n                    >\r\n                      <span class=\"fa fa-file-text mr-2\"></span>\r\n                      {{ subReport.label }}\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </ng-container>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-md\">\r\n      <div class=\"card report-details\">\r\n        <h6 class=\"card-header text-bg-secondary\">Report Details</h6>\r\n        <ng-container\r\n          [ngTemplateOutlet]=\"commonFieldsTab\"\r\n          [ngTemplateOutletContext]=\"{ readonly: true }\"\r\n        ></ng-container>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"bg-secondary avbar navbar-expand-lg navbar-light sticky-bottom\">\r\n  <div class=\"text-center d-lg-none w-100\">\r\n    <button\r\n      type=\"button\"\r\n      class=\"navbar-toggler dropdown-toggle\"\r\n      data-bs-toggle=\"collapse\"\r\n      data-bs-target=\"#navbar-footer\"\r\n    >\r\n      <i class=\"fa fa-cogs\"></i>\r\n      &nbsp;Controls\r\n    </button>\r\n  </div>\r\n\r\n  <div class=\"navbar-collapse collapse\" id=\"navbar-footer\">\r\n    <div class=\"w-100 p-2\">\r\n      <div class=\"d-flex justify-content-evenly\">\r\n        <button type=\"button\" class=\"btn btn-primary\">\r\n          <span class=\"fa fa-history\"></span>&nbsp;Memories\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-danger\"\r\n          data-bs-toggle=\"modal\"\r\n          data-bs-target=\"#modifiedReportPort\"\r\n        >\r\n          <span class=\"fa fa-history\"></span>&nbsp;Modified\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-success\">\r\n          <span class=\"fa fa-history\"></span>&nbsp;Report\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div\r\n  class=\"modal\"\r\n  id=\"modifiedReportPort\"\r\n  tabindex=\"-1\"\r\n  role=\"dialog\"\r\n  aria-labelledby=\"modifiedReportPortTitle\"\r\n  aria-hidden=\"true\"\r\n  data-backdrop=\"static\"\r\n>\r\n  <div class=\"modal-dialog modal-lg m-auto\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header p-1\">\r\n        <h5 class=\"modal-title\">Report Setup - {{ reportHeads.ReportName }}</h5>\r\n        <button\r\n          type=\"button\"\r\n          class=\"close\"\r\n          data-dismiss=\"modal\"\r\n          aria-label=\"Close\"\r\n        >\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body p-0\">\r\n        <nav class=\"nav nav-pills nav-fill\">\r\n          <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Active</a>\r\n          <a class=\"nav-link\" href=\"#\">Much longer nav link</a>\r\n          <a class=\"nav-link\" href=\"#\">Link</a>\r\n          <a class=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\r\n        </nav>\r\n        <!-- <ul\r\n          class=\"nav nav-tabs nav-tabs-solid bg-teal-400 border-0 nav-justified\"\r\n        >\r\n          <li class=\"nav-item flex-basis border-right\">\r\n            <a\r\n              href=\"#fields-tab\"\r\n              class=\"nav-link font-weight-bold active show px-2\"\r\n              data-toggle=\"tab\"\r\n            >\r\n              Fields\r\n            </a>\r\n          </li>\r\n          <li class=\"nav-item flex-basis border-right\">\r\n            <a\r\n              href=\"#grouping-tab\"\r\n              class=\"nav-link font-weight-bold px-2\"\r\n              data-toggle=\"tab\"\r\n            >\r\n              Grouping\r\n            </a>\r\n          </li>\r\n          <li class=\"nav-item flex-basis border-right\">\r\n            <a\r\n              href=\"#sum-tab\"\r\n              class=\"nav-link font-weight-bold px-2\"\r\n              data-toggle=\"tab\"\r\n            >\r\n              Sum\r\n            </a>\r\n          </li>\r\n          <li class=\"nav-item flex-basis border-right\">\r\n            <a\r\n              href=\"#filter-tab\"\r\n              class=\"nav-link font-weight-bold px-2\"\r\n              data-toggle=\"tab\"\r\n            >\r\n              Filter\r\n            </a>\r\n          </li>\r\n          <li class=\"nav-item flex-basis border-right\">\r\n            <a\r\n              href=\"#styles-tab\"\r\n              class=\"nav-link font-weight-bold px-2\"\r\n              data-toggle=\"tab\"\r\n            >\r\n              Styles\r\n            </a>\r\n          </li>\r\n          <li class=\"nav-item flex-basis border-right\">\r\n            <a\r\n              href=\"#page-setup-tab\"\r\n              class=\"nav-link font-weight-bold px-2\"\r\n              data-toggle=\"tab\"\r\n            >\r\n              Page setup\r\n            </a>\r\n          </li>\r\n        </ul> -->\r\n        <div class=\"detail-tabs tab-content\">\r\n          <div class=\"tab-pane fade active show\" id=\"fields-tab\">\r\n            <ng-container [ngTemplateOutlet]=\"fieldsTab\"></ng-container>\r\n          </div>\r\n\r\n          <div class=\"tab-pane fade\" id=\"grouping-tab\">\r\n            <ng-container [ngTemplateOutlet]=\"groupTab\"></ng-container>\r\n          </div>\r\n\r\n          <div class=\"tab-pane fade\" id=\"sum-tab\">\r\n            <ng-container [ngTemplateOutlet]=\"sumTab\"></ng-container>\r\n          </div>\r\n\r\n          <div class=\"tab-pane fade\" id=\"filter-tab\">\r\n            <ng-container [ngTemplateOutlet]=\"filterTab\"></ng-container>\r\n          </div>\r\n\r\n          <div class=\"tab-pane fade\" id=\"styles-tab\">\r\n            <ng-container [ngTemplateOutlet]=\"styleTab\"></ng-container>\r\n          </div>\r\n\r\n          <div class=\"tab-pane fade\" id=\"page-setup-tab\">\r\n            <ng-container [ngTemplateOutlet]=\"pageSetupTab\"></ng-container>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-footer p-1\">\r\n        <button class=\"btn btn-primary\" (click)=\"doSave()\">\r\n          {{ reportHeads.IsStdReport ? \"Save As\" : \"Save\" }}\r\n        </button>\r\n        <button class=\"btn btn-success\" (click)=\"getReport()\">Report</button>\r\n        <button class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #commonFieldsTab let-readonly=\"readonly\">\r\n  <div class=\"card-body\">\r\n    <div class=\"row form-group\">\r\n      <div class=\"col-lg-4\">\r\n        <label>Report Title</label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"reportHeads.ReportName\"\r\n          [readonly]=\"readonly\"\r\n        />\r\n      </div>\r\n      <div class=\"col-lg-8\">\r\n        <label>Report Description</label>\r\n        <input\r\n          type=\"text\"\r\n          class=\"form-control\"\r\n          [(ngModel)]=\"reportHeads.ReportDescription\"\r\n          [readonly]=\"readonly\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <h6\r\n    class=\"card-header text-bg-secondary\"\r\n    *ngIf=\"reportHeads.NoOfDateFields || true\"\r\n  >\r\n    Report Date Range\r\n  </h6>\r\n  <div class=\"card-body\" *ngIf=\"reportHeads.NoOfDateFields || true\">\r\n    <div class=\"row form-group\">\r\n      <div class=\"col-md-4\">\r\n        <label>Date Range</label>\r\n        <p-dropdown\r\n          [styleClass]=\"'form-control'\"\r\n          [placeholder]=\"'Select date range'\"\r\n          [options]=\"pdDateRange\"\r\n          [(ngModel)]=\"reportHeads.DateDefault\"\r\n          [appendTo]=\"'body'\"\r\n          [filter]=\"pdDateRange.length > 5\"\r\n          [resetFilterOnHide]=\"true\"\r\n          (onChange)=\"onChangeDateRange()\"\r\n          [baseZIndex]=\"1040\"\r\n        >\r\n        </p-dropdown>\r\n      </div>\r\n      <div class=\"col-md-4\" *ngIf=\"reportHeads.NoOfDateFields >= 1 || true\">\r\n        <label>From Date</label>\r\n        <input\r\n          class=\"form-control\"\r\n          [owlDateTime]=\"fromDt\"\r\n          [owlDateTimeTrigger]=\"fromDt\"\r\n          [placeholder]=\"phDateFormat\"\r\n          [(ngModel)]=\"reportPort.FromDate\"\r\n        />\r\n        <owl-date-time #fromDt [pickerType]=\"'calendar'\"></owl-date-time>\r\n      </div>\r\n      <div class=\"col-md-4\" *ngIf=\"reportHeads.NoOfDateFields >= 2 || true\">\r\n        <label>To Date</label>\r\n        <input\r\n          class=\"form-control\"\r\n          [owlDateTime]=\"toDt\"\r\n          [owlDateTimeTrigger]=\"toDt\"\r\n          [placeholder]=\"phDateFormat\"\r\n          [(ngModel)]=\"reportPort.ToDate\"\r\n        />\r\n        <owl-date-time #toDt [pickerType]=\"'calendar'\"></owl-date-time>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <h6 class=\"card-header text-bg-secondary\">\r\n    Select {{ reportHeads.WarningMessage || \"Account\" }}\r\n  </h6>\r\n  <div class=\"card-body\">\r\n    <div class=\"row form-group\">\r\n      <div class=\"col-md-4\">\r\n        <label>{{ reportHeads.WarningMessage || \"Account Name\" }}</label>\r\n        <p-dropdown\r\n          [styleClass]=\"'form-control'\"\r\n          [placeholder]=\"\r\n            'Select ' + (reportHeads.WarningMessage || 'Account Name')\r\n          \"\r\n          [options]=\"reportPort.LedgerList\"\r\n          [(ngModel)]=\"reportPort.LedgerValue\"\r\n          [appendTo]=\"'body'\"\r\n          [filter]=\"reportPort.LedgerList.length > 5\"\r\n          [resetFilterOnHide]=\"true\"\r\n          [baseZIndex]=\"1040\"\r\n        >\r\n        </p-dropdown>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #fieldsTab>\r\n  <div class=\"card mb-0 p-1\">\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"commonFieldsTab\"\r\n      [ngTemplateOutletContext]=\"{ readonly: false }\"\r\n    ></ng-container>\r\n    <h5 class=\"bg-teal-400 mb-0 p-1\">Fields to Display</h5>\r\n    <div class=\"card-body\">\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-6\">\r\n          <div style=\"height: 200px; overflow-y: auto\">\r\n            <table class=\"table table-bordered\">\r\n              <thead class=\"table-head-bg\">\r\n                <tr>\r\n                  <th class=\"p-1 w-25\">Action</th>\r\n                  <th class=\"p-1 w-75\">Display Name</th>\r\n                  <th class=\"p-1 w-25\">Width</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let detail of reportDetails\">\r\n                  <td\r\n                    class=\"text-center pointer py-0\"\r\n                    (click)=\"detail.ViewDisabled = !detail.ViewDisabled\"\r\n                  >\r\n                    <i\r\n                      class=\"fa text-{{\r\n                        detail.ViewDisabled\r\n                          ? 'danger fa-times'\r\n                          : 'success fa-check'\r\n                      }}\"\r\n                    ></i>\r\n                  </td>\r\n                  <td class=\"py-0\">{{ detail.DisplayName }}</td>\r\n                  <td class=\"p-0\">\r\n                    <input\r\n                      type=\"number\"\r\n                      class=\"form-control bg-transparent\"\r\n                      [(ngModel)]=\"detail.Width\"\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-lg-6\">\r\n          <div class=\"form-group row\">\r\n            <label class=\"col-lg-4\">Sort By</label>\r\n            <div class=\"col-lg-8 input-group\">\r\n              <span class=\"input-group-prepend\">\r\n                <span class=\"input-group-text\"><i class=\"fa fa-user\"></i></span>\r\n              </span>\r\n              <select class=\"form-control\" [(ngModel)]=\"reportPort.OrderByAdd\">\r\n                <ng-container\r\n                  *ngFor=\"\r\n                    let detail of reportDetails | filterBy : validViewDisabled\r\n                  \"\r\n                >\r\n                  <option *ngIf=\"!detail.OrderBy\" [ngValue]=\"detail.RDAutoId\">\r\n                    {{ detail.DisplayName }}\r\n                  </option>\r\n                </ng-container>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-info ml-3 mb-1\"\r\n            (click)=\"toggleOrderByField('OrderByAdd')\"\r\n          >\r\n            Add\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-info ml-3 mb-1\"\r\n            (click)=\"toggleOrderByField()\"\r\n          >\r\n            Remove\r\n          </button>\r\n\r\n          <div style=\"height: 120px; overflow-y: auto\">\r\n            <table class=\"table table-bordered\">\r\n              <thead class=\"table-head-bg position-sticky top\">\r\n                <tr>\r\n                  <th class=\"p-1\">S.No</th>\r\n                  <th class=\"p-1\">Field Name</th>\r\n                  <th class=\"p-1\">Sort By</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <ng-container\r\n                  *ngFor=\"\r\n                    let detail of reportDetails | filterBy : validOrderBy;\r\n                    let i = index\r\n                  \"\r\n                >\r\n                  <tr (click)=\"reportPort.OrderByRemove = detail.RDAutoId\">\r\n                    <td class=\"p-1\">{{ i + 1 }}</td>\r\n                    <td\r\n                      class=\"p-1\"\r\n                      [class.bg-primary]=\"\r\n                        reportPort.OrderByRemove == detail.RDAutoId\r\n                      \"\r\n                    >\r\n                      {{ detail.DisplayName }}\r\n                    </td>\r\n                    <td class=\"p-1 pointer\" (click)=\"toggleOrderByPref(detail)\">\r\n                      {{ detail.OrderByPref }}\r\n                    </td>\r\n                  </tr>\r\n                </ng-container>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #groupTab>\r\n  <div class=\"card mb-0 p-1\">\r\n    <h5 class=\"bg-teal-400 mb-0 p-1\">Available Fields for Grouping</h5>\r\n\r\n    <div class=\"card-body\">\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-5\">\r\n          <table class=\"table table-bordered\">\r\n            <thead class=\"table-head-bg position-sticky top\">\r\n              <tr>\r\n                <th class=\"p-1 w-25\"></th>\r\n                <th class=\"p-1 w-75\">Display Name</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <ng-container\r\n                *ngFor=\"\r\n                  let detail of reportDetails | filterBy : validGroupingEligible\r\n                \"\r\n              >\r\n                <tr *ngIf=\"!detail.GroupBy\">\r\n                  <td\r\n                    class=\"p-1 pointer text-center text-success\"\r\n                    (click)=\"detail.GroupByAdd = !detail.GroupByAdd\"\r\n                  >\r\n                    <span *ngIf=\"detail.GroupByAdd\" class=\"fa fa-check\"></span>\r\n                  </td>\r\n                  <td class=\"p-1\">{{ detail.DisplayName }}</td>\r\n                </tr>\r\n              </ng-container>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div\r\n          class=\"col-lg-2 row d-flex justify-content-center text-center align-self-center mx-auto\"\r\n        >\r\n          <button\r\n            class=\"btn btn-primary\"\r\n            (click)=\"toggleGroupByField(true, reportHeads.FixedGroup)\"\r\n          >\r\n            <li class=\"fa fa-fast-forward\" aria-hidden=\"true\"></li>\r\n          </button>\r\n        </div>\r\n\r\n        <div class=\"col-lg-5 text-center\">\r\n          <div class=\"card h-100\">\r\n            <div class=\"card-body\">\r\n              <ng-template #treeView let-data=\"columns\">\r\n                <ul\r\n                  class=\"list-style-none text-left pl-3\"\r\n                  *ngIf=\"data && data.field\"\r\n                >\r\n                  <li class=\"\">\r\n                    <span>\r\n                      <span class=\"badge badge-success\">{{ data.gIndex }}</span>\r\n                      {{ data.label }}\r\n                    </span>\r\n                    <ng-container\r\n                      [ngTemplateOutlet]=\"treeView\"\r\n                      [ngTemplateOutletContext]=\"{ columns: data.columns }\"\r\n                    ></ng-container>\r\n                  </li>\r\n                </ul>\r\n              </ng-template>\r\n              <ng-container\r\n                [ngTemplateOutlet]=\"treeView\"\r\n                [ngTemplateOutletContext]=\"{ columns: reportMetadataCols }\"\r\n              ></ng-container>\r\n            </div>\r\n          </div>\r\n\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-danger mt-auto\"\r\n            (click)=\"toggleGroupByField(false, reportHeads.FixedGroup)\"\r\n          >\r\n            Clear\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #sumTab>\r\n  <div class=\"card\">\r\n    <div class=\"card-body\">\r\n      <h5 class=\"bg-teal-400 p-1\">Available Sum Fields</h5>\r\n      <ul class=\"list-group\">\r\n        <li\r\n          class=\"list-group-item\"\r\n          *ngFor=\"let detail of reportDetails | filterBy : validSumField\"\r\n        >\r\n          <div class=\"custom-control custom-checkbox primary\">\r\n            <input\r\n              type=\"checkbox\"\r\n              class=\"custom-control-input\"\r\n              id=\"sumFieldCheck{{ detail.RDAutoId }}\"\r\n              [(ngModel)]=\"detail.SumFieldAdd\"\r\n            />\r\n            <label\r\n              class=\"custom-control-label\"\r\n              for=\"sumFieldCheck{{ detail.RDAutoId }}\"\r\n            >\r\n              {{ detail.DisplayName }}\r\n            </label>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-4\">\r\n          <div class=\"text-center p-1\">\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-info\"\r\n              (click)=\"toggleSumField('RunningTotal')\"\r\n            >\r\n              Add To Running Total\r\n            </button>\r\n          </div>\r\n          <div class=\"card p-1\">\r\n            <h5 class=\"bg-teal-400 mb-0 p-1\">Advanced Running Total</h5>\r\n            <div class=\"card-body\">\r\n              <select\r\n                class=\"form-control\"\r\n                [(ngModel)]=\"reportPort.RunningTotalPrev\"\r\n              >\r\n                <ng-container\r\n                  *ngFor=\"\r\n                    let detail of reportDetails | filterBy : validRunningTotal\r\n                  \"\r\n                >\r\n                  <option\r\n                    *ngIf=\"reportPort.RunningTotalNext != detail.RDAutoId\"\r\n                  >\r\n                    {{ detail.DisplayName }}\r\n                  </option>\r\n                </ng-container>\r\n              </select>\r\n              <select class=\"form-control my-1\">\r\n                <option>+</option>\r\n                <option>-</option>\r\n              </select>\r\n              <select\r\n                class=\"form-control\"\r\n                [(ngModel)]=\"reportPort.RunningTotalNext\"\r\n              >\r\n                <ng-container\r\n                  *ngFor=\"\r\n                    let detail of reportDetails | filterBy : validRunningTotal\r\n                  \"\r\n                >\r\n                  <option\r\n                    *ngIf=\"reportPort.RunningTotalPrev != detail.RDAutoId\"\r\n                  >\r\n                    {{ detail.DisplayName }}\r\n                  </option>\r\n                </ng-container>\r\n              </select>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-info m-auto my-1\"\r\n              (click)=\"toggleSumField('RunningTotal', false)\"\r\n            >\r\n              Remove\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-lg-4\">\r\n          <div class=\"text-center p-1\">\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-info\"\r\n              (click)=\"toggleSumField('GroupTotal')\"\r\n            >\r\n              Add To Group Total\r\n            </button>\r\n          </div>\r\n          <div class=\"card p-1\">\r\n            <h5 class=\"bg-teal-400 mb-0 p-1\">Group Total</h5>\r\n            <div class=\"card-body\">\r\n              <ul class=\"list-group\">\r\n                <li\r\n                  *ngFor=\"\r\n                    let detail of reportDetails | filterBy : validGroupTotal\r\n                  \"\r\n                  class=\"list-group-item\"\r\n                >\r\n                  {{ detail.DisplayName }}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-info m-auto my-1\"\r\n              (click)=\"toggleSumField('GroupTotal', false)\"\r\n            >\r\n              Remove\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-lg-4\">\r\n          <div class=\"text-center p-1\">\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-info\"\r\n              (click)=\"toggleSumField('GrandTotal')\"\r\n            >\r\n              Add To Grand Total\r\n            </button>\r\n          </div>\r\n          <div class=\"card p-1\">\r\n            <h5 class=\"bg-teal-400 mb-0 p-1\">Grand Total</h5>\r\n            <div class=\"card-body\">\r\n              <ul class=\"list-group\">\r\n                <li\r\n                  *ngFor=\"\r\n                    let detail of reportDetails | filterBy : validGrandTotal\r\n                  \"\r\n                  class=\"list-group-item\"\r\n                >\r\n                  {{ detail.DisplayName }}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-info m-auto my-1\"\r\n              (click)=\"toggleSumField('GrandTotal', false)\"\r\n            >\r\n              Remove\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #filterTab>\r\n  <div class=\"card\">\r\n    <div class=\"card-body\">\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-5 d-flex\">\r\n          <div class=\"card w-100\">\r\n            <h5 class=\"p-1 bg-teal-400 mb-0 text-center\">\r\n              Available Filter Fields\r\n            </h5>\r\n            <div\r\n              class=\"card-body p-0\"\r\n              style=\"height: 120px; overflow-y: scroll\"\r\n            >\r\n              <ul class=\"list-group\">\r\n                <li\r\n                  *ngFor=\"\r\n                    let detail of reportDetails | filterBy : validFilterField\r\n                  \"\r\n                  class=\"list-group-item\"\r\n                  [class.active]=\"detail.RDAutoId == reportPort.FilterField\"\r\n                  (click)=\"toggleFilterField(detail)\"\r\n                >\r\n                  {{ detail.DisplayName }}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg-7 d-flex\">\r\n          <div class=\"card w-100\">\r\n            <h5 class=\"p-1 bg-teal-400 mb-1 w-100\">Select Filter Option</h5>\r\n            <div class=\"card-body\">\r\n              <div class=\"ml-2\">\r\n                <div class=\"input-group w-50 pb-2\">\r\n                  <span class=\"input-group-prepend\">\r\n                    <span class=\"input-group-text\">\r\n                      <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\r\n                    </span>\r\n                  </span>\r\n                  <select\r\n                    class=\"form-control\"\r\n                    [(ngModel)]=\"reportPort.FilterOperator\"\r\n                  >\r\n                    <option\r\n                      *ngFor=\"let operator of reportPort.ddFilterOperator\"\r\n                    >\r\n                      {{ operator.label }}\r\n                    </option>\r\n                  </select>\r\n                </div>\r\n                <div class=\"input-group w-50 pb-2\">\r\n                  <span class=\"input-group-prepend\">\r\n                    <span class=\"input-group-text\">\r\n                      <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\r\n                    </span>\r\n                  </span>\r\n                  <p-autoComplete\r\n                    [inputStyleClass]=\"'form-control'\"\r\n                    [styleClass]=\"'p-0'\"\r\n                    [suggestions]=\"reportPort.ddFilterList\"\r\n                    [minLength]=\"1\"\r\n                    [dropdown]=\"false\"\r\n                    [(ngModel)]=\"reportPort.FilterCondition\"\r\n                    (completeMethod)=\"onSearchFilterList($event.query)\"\r\n                    (onDropdownClick)=\"\r\n                      reportPort.ddFilterList = reportPort.ddFilterListAll\r\n                    \"\r\n                  >\r\n                  </p-autoComplete>\r\n                </div>\r\n                <div class=\"float-right pr-3 pb-2\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    class=\"btn btn-md btn-success\"\r\n                    (click)=\"addToFilterField()\"\r\n                  >\r\n                    Add\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-12\">\r\n          <div class=\"table-responsive\">\r\n            <div class=\"table-wrapper-scroll-y my-custom-scrollbar\">\r\n              <table class=\"table table-bordered table-striped mb-1\">\r\n                <thead class=\"table-head-bg\">\r\n                  <tr>\r\n                    <th style=\"width: 10%\"></th>\r\n                    <th style=\"width: 25%\">Field Name</th>\r\n                    <th style=\"width: 25%\">Operator</th>\r\n                    <th style=\"width: 40%\">Condition</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor=\"let filter of reportPort.FilterFieldList\">\r\n                    <td\r\n                      (click)=\"filter.FilterRemove = !filter.FilterRemove\"\r\n                      class=\"text-center\"\r\n                    >\r\n                      <span\r\n                        *ngIf=\"filter.FilterRemove\"\r\n                        class=\"fa fa-check text-success\"\r\n                      ></span>\r\n                    </td>\r\n                    <td>{{ filter.DisplayName }}</td>\r\n                    <td>{{ filter.FilterOperator }}</td>\r\n                    <td>{{ filter.FilterCondition }}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #styleTab>\r\n  <div class=\"card\">\r\n    <div class=\"card-body\">\r\n      <h5 class=\"p-1 bg-teal-400\">Available Styles</h5>\r\n      <div class=\"form-group row\">\r\n        <div class=\"col-lg-3\">Odd Rows Color</div>\r\n        <div class=\"col-lg-3\">\r\n          <div class=\"input-group\">\r\n            <span class=\"input-group-prepend\">\r\n              <span class=\"input-group-text\">\r\n                <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\r\n              </span>\r\n            </span>\r\n            <input\r\n              class=\"form-control\"\r\n              [cpOutputFormat]=\"'hex'\"\r\n              [(colorPicker)]=\"reportHeads.Record1Color\"\r\n              style.background=\"#{{ fillColor.odd }}\"\r\n              [value]=\"reportHeads.Record1Color\"\r\n              readonly\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-lg-3\">Even Rows Color</div>\r\n        <div class=\"col-lg-3\">\r\n          <div class=\"input-group\">\r\n            <span class=\"input-group-prepend\">\r\n              <span class=\"input-group-text\">\r\n                <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\r\n              </span>\r\n            </span>\r\n            <input\r\n              class=\"form-control\"\r\n              [cpOutputFormat]=\"'hex'\"\r\n              [(colorPicker)]=\"reportHeads.Record2Color\"\r\n              style.background=\"#{{ fillColor.even }}\"\r\n              [value]=\"reportHeads.Record2Color\"\r\n              readonly\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"form-group row\">\r\n        <div class=\"col-lg-3\">Group Total</div>\r\n        <div class=\"col-lg-3\">\r\n          <div class=\"input-group\">\r\n            <span class=\"input-group-prepend\">\r\n              <span class=\"input-group-text\">\r\n                <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\r\n              </span>\r\n            </span>\r\n            <input\r\n              class=\"form-control\"\r\n              [cpOutputFormat]=\"'hex'\"\r\n              [(colorPicker)]=\"reportHeads.GroupTotalColor\"\r\n              style.background=\"#{{ fillColor.groupTotal }}\"\r\n              [value]=\"reportHeads.GroupTotalColor\"\r\n              readonly\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"col-lg-3\">Grand Total</div>\r\n        <div class=\"col-lg-3\">\r\n          <div class=\"input-group\">\r\n            <span class=\"input-group-prepend\">\r\n              <span class=\"input-group-text\">\r\n                <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\r\n              </span>\r\n            </span>\r\n            <input\r\n              class=\"form-control\"\r\n              [cpOutputFormat]=\"'hex'\"\r\n              [(colorPicker)]=\"reportHeads.GrandTotalColor\"\r\n              style.background=\"#{{ fillColor.grandTotal }}\"\r\n              [value]=\"reportHeads.GrandTotalColor\"\r\n              readonly\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <h5 class=\"p-1 bg-teal-400 mb-1\">Preview</h5>\r\n    <div class=\"card-body\">\r\n      <h2 class=\"text-center mb-0\">Smatrix Application</h2>\r\n      <h5 class=\"text-center mb-2\">\r\n        <u>{{ reportHeads.ReportName }}</u>\r\n      </h5>\r\n      <div class=\"p-1\">\r\n        <div class=\"table-wrapper-scroll-x my-custom-scrollbar\">\r\n          <app-report-preview\r\n            [columns]=\"sampleReport.columns\"\r\n            [reportData]=\"sampleReport.reports\"\r\n            [reportMetaDataColumns]=\"sampleReport.metaColumns\"\r\n            [reportMetaData]=\"sampleReport.metaData\"\r\n            [fillColor]=\"fillColor\"\r\n            [isResponsive]=\"false\"\r\n          ></app-report-preview>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #pageSetupTab>\r\n  <div class=\"card w-100\">\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-1\"></div>\r\n      <div class=\"col-lg-10\">\r\n        <div class=\"row mt-2\">\r\n          <div class=\"card w-100\">\r\n            <h5 class=\"p-1 bg-teal-400 mb-0 w-100\">Page Settings</h5>\r\n            <div class=\"row m-1\">\r\n              <div class=\"col-lg-3 d-flex pb-1\">Page Size</div>\r\n              <div class=\"col-lg-9 d-flex pb-1\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  [(ngModel)]=\"reportHeads.PaperSize\"\r\n                  readonly\r\n                />\r\n              </div>\r\n              <div class=\"col-lg-3 d-flex pb-1\">Orientation</div>\r\n              <div class=\"col-lg-9 form-group d-flex pb-1\">\r\n                <div class=\"custom-control custom-radio custom-control-inline\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    class=\"custom-control-input\"\r\n                    name=\"orientation\"\r\n                    id=\"PotraitCheck1\"\r\n                    [value]=\"true\"\r\n                    [(ngModel)]=\"reportHeads.Portrait\"\r\n                  />\r\n                  <label class=\"custom-control-label\" for=\"PotraitCheck1\"\r\n                    >Potrait</label\r\n                  >\r\n                </div>\r\n                <div class=\"custom-control custom-radio custom-control-inline\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    class=\"custom-control-input\"\r\n                    name=\"orientation\"\r\n                    id=\"PotraitCheck2\"\r\n                    [value]=\"false\"\r\n                    [(ngModel)]=\"reportHeads.Portrait\"\r\n                  />\r\n                  <label class=\"custom-control-label\" for=\"PotraitCheck2\"\r\n                    >Landscape</label\r\n                  >\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row mt-2\">\r\n          <div class=\"card w-100\">\r\n            <h5 class=\"p-1 bg-teal-400 mb-0 w-100\">Header & Footer</h5>\r\n            <div class=\"row m-1\">\r\n              <div class=\"col-lg-3 d-flex pb-1\">Header</div>\r\n              <div class=\"col-lg-9 d-flex pb-1\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  [(ngModel)]=\"reportHeads.Header\"\r\n                />\r\n              </div>\r\n              <div class=\"col-lg-3 d-flex pb-1\">Footer</div>\r\n              <div class=\"col-lg-9 d-flex pb-1\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  [(ngModel)]=\"reportHeads.Footer\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row mt-2\">\r\n          <div class=\"card w-100\">\r\n            <h5 class=\"p-1 bg-teal-400 mb-0 w-100\">Margins</h5>\r\n            <div class=\"row m-1\">\r\n              <div class=\"col-lg-3 d-flex pb-1\">Left :</div>\r\n              <div class=\"col-lg-3 d-flex pb-1\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  [(ngModel)]=\"reportHeads.LeftMargin\"\r\n                />\r\n              </div>\r\n              <div class=\"col-lg-3 d-flex pb-1\">Right :</div>\r\n              <div class=\"col-lg-3 d-flex pb-1\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  [(ngModel)]=\"reportHeads.RightMargin\"\r\n                />\r\n              </div>\r\n              <div class=\"col-lg-3 d-flex pb-1\">Top :</div>\r\n              <div class=\"col-lg-3 d-flex pb-1\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  [(ngModel)]=\"reportHeads.TopMargin\"\r\n                />\r\n              </div>\r\n              <div class=\"col-lg-3 d-flex pb-1\">Bottom :</div>\r\n              <div class=\"col-lg-3 d-flex pb-1\">\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control\"\r\n                  [(ngModel)]=\"reportHeads.BottomMargin\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-lg-1\"></div>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { DropdownModule } from \"primeng/dropdown\";\nimport {\n  OwlDateTimeModule,\n  OwlNativeDateTimeModule,\n} from \"ng-pick-datetime-ex\";\n\nimport { FilterPipeModule } from \"report-tool/pipes\"\n\nimport { ReportToolComponent } from \"./report-tool.component\";\n\n@NgModule({\n  declarations: [ReportToolComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    DropdownModule,\n    OwlDateTimeModule,\n    OwlNativeDateTimeModule,\n    FilterPipeModule\n  ],\n  exports: [ReportToolComponent],\n})\nexport class ReportToolModule {}\n","/*\n * Public API Surface of report-tool\n */\n\nexport * from './report-tool.service';\nexport * from './report-tool.component';\nexport * from './report-tool.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}