{"version":3,"file":"report-tool-modules-report-preview.mjs","sources":["../../../projects/report-tool/modules/report-preview/report-preview.component.ts","../../../projects/report-tool/modules/report-preview/report-preview.component.html","../../../projects/report-tool/modules/report-preview/report-preview.module.ts","../../../projects/report-tool/modules/report-preview/public-api.ts","../../../projects/report-tool/modules/report-preview/report-tool-modules-report-preview.ts"],"sourcesContent":["import {\r\n  Component,\r\n  Input,\r\n  SimpleChanges,\r\n  ViewChild,\r\n  ElementRef,\r\n  OnInit,\r\n  OnChanges,\r\n} from \"@angular/core\";\r\n\r\nimport { fillColor } from \"report-tool/core\";\r\nimport { exportPdf, exportExcel, formatDate, sort } from \"report-tool/methods\";\r\nimport {\r\n  ExcelOptions,\r\n  ICommonOptions,\r\n  OrientationType,\r\n  PdfOptions,\r\n} from \"report-tool/models\";\r\n\r\n@Component({\r\n  selector: \"lib-report-preview\",\r\n  templateUrl: \"./report-preview.component.html\",\r\n})\r\nexport class ReportPreviewComponent implements OnInit, OnChanges {\r\n  dateFormat = \"dd-MM-yyyy\";\r\n  reportMetaData: any = {};\r\n  devidHeight = 0;\r\n  id = \"export-table\";\r\n\r\n  @Input() reportTitle: any = {\r\n    CompanyName: \"Report Tool\",\r\n    Address: \"\",\r\n  };\r\n  @Input() Title = \"Report\";\r\n  @Input() requestData: any[] = [];\r\n  @Input() columns: any[] = [];\r\n  @Input() reportData: any[] = [];\r\n  @Input() reportMetaDataColumns: any;\r\n  @Input() orientation = OrientationType.Portrait;\r\n  @Input() pageSize = \"a4\";\r\n  @Input() FromDate: string;\r\n  @Input() ToDate: string;\r\n  @Input() DistanceSplit: boolean;\r\n  @Input() ReportDate = {\r\n    title: \"Report Date\",\r\n    format: this.dateFormat,\r\n  };\r\n  @Input() fillColor = fillColor;\r\n  @Input() emptyMessage = \"\";\r\n  @Input() isResponsive = true;\r\n\r\n  @ViewChild(\"exportTable\") TABLE: ElementRef;\r\n\r\n  private get exportTable(): HTMLElement {\r\n    // return document.getElementById(this.id);\r\n    return document.querySelector(\"#\" + this.id);\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    const contentWrapper =\r\n      document.getElementsByClassName(\"content-wrapper\")[0];\r\n    if (contentWrapper) {\r\n      contentWrapper.className += \" mb-0\";\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.columns) {\r\n      this.setReportColumns();\r\n    }\r\n    if (changes.reportMetaDataColumns) {\r\n      this.setReportMetaData();\r\n    }\r\n  }\r\n\r\n  print(): void {\r\n    const bodyContent = document.body;\r\n    const printContent = document.createElement(\"body\");\r\n    printContent.innerHTML = this.exportTable.innerHTML;\r\n    document.body = printContent;\r\n    window.print();\r\n    document.body = bodyContent;\r\n  }\r\n\r\n  exportPdf(): void {\r\n    const pdfOptions = this.exportOptions.pdfOptions;\r\n    exportPdf(pdfOptions);\r\n  }\r\n\r\n  exportExcel(): void {\r\n    const excelOptions = this.exportOptions.excelOptions;\r\n    exportExcel(excelOptions);\r\n  }\r\n\r\n  private getReportTitle(): void {}\r\n\r\n  private setReportColumns(): void {\r\n    if (!this.columns.some((s) => s.field === \"SNo\")) {\r\n      this.columns.unshift({\r\n        header: \"S.No\",\r\n        field: \"SNo\",\r\n        type: \"id\",\r\n        width: \"75px\",\r\n        PdfWidth: 5,\r\n        ExcelWidth: 8,\r\n      });\r\n    }\r\n  }\r\n\r\n  private setReportMetaData(): void {\r\n    let SNo = 0;\r\n    this.reportMetaData = {};\r\n    const reportList = this.reportMetaDataColumns\r\n      ? sort(this.reportData, this.reportMetaDataColumns.field)\r\n      : this.reportData;\r\n    reportList.forEach((report, index) => {\r\n      const setMetaData = (metadata: any, columns: any, fields = []) => {\r\n        if (columns && columns.field) {\r\n          const field = report[columns.field];\r\n          columns.classNames = fields.length ? \"row-childgroup\" : \"row-group\";\r\n          columns.fields = [...fields, columns.field];\r\n          if (!metadata[field]) {\r\n            SNo = 0;\r\n            metadata[field] = {\r\n              header: this.reportMetaDataColumns.header,\r\n              index: +index,\r\n              columns: {},\r\n            };\r\n          }\r\n          if ((columns.subTotal || []).length) {\r\n            (columns.subTotal as string[]).forEach((subTotalField) => {\r\n              const currentVal = +report[subTotalField] || 0;\r\n              if (!metadata[field].subTotal) {\r\n                metadata[field].subTotal = {};\r\n              }\r\n              const subTotal = metadata[field].subTotal[subTotalField] || 0;\r\n              metadata[field].subTotal[subTotalField] = subTotal + currentVal;\r\n              metadata[field].subTotal.index = index;\r\n            });\r\n          }\r\n          setMetaData(metadata[field].columns, columns.columns, columns.fields);\r\n        }\r\n      };\r\n      setMetaData(this.reportMetaData, this.reportMetaDataColumns);\r\n      report.SNo = ++SNo;\r\n    });\r\n  }\r\n\r\n  get currentTime(): Date {\r\n    return new Date();\r\n  }\r\n\r\n  private get exportOptions(): {\r\n    pdfOptions: PdfOptions;\r\n    excelOptions: ExcelOptions;\r\n  } {\r\n    const FromDate = `${this.FromDate ? \"From Date: \" + this.FromDate : \"\"}`;\r\n    const ToDate = ` ${this.ToDate ? \"To Date: \" + this.ToDate : \"\"}`;\r\n    const reportDate = `${this.ReportDate.title}: ${formatDate(\r\n      this.currentTime,\r\n      this.ReportDate.format\r\n    )}`;\r\n    const pTableColumns = this.columns.map((col) => {\r\n      col.dataKey = col.field;\r\n      return col;\r\n    });\r\n    const eTableColumns = this.columns.map((col) => {\r\n      const returnValue = {\r\n        header: col.header,\r\n        key: col.field,\r\n        width: col.ExcelWidth,\r\n        type: col.type,\r\n      };\r\n      return returnValue;\r\n    });\r\n\r\n    const options: ICommonOptions = {\r\n      bgColor: this.fillColor,\r\n      reportTitle: this.reportTitle,\r\n      rowDataGroup: this.reportMetaDataColumns ? this.reportMetaData : null,\r\n      isBlob: false,\r\n    };\r\n\r\n    const pdfOptions: PdfOptions = {\r\n      orientation: this.orientation,\r\n      pageSize: this.pageSize,\r\n      rowData: this.reportData,\r\n      columns: pTableColumns,\r\n      requestTitle: [reportDate],\r\n      FromDate: [FromDate],\r\n      ToDate: [ToDate],\r\n      tableOptions: {\r\n        startY: 10,\r\n        title: this.Title,\r\n        Fields: this.reportMetaDataColumns,\r\n      },\r\n      ...options,\r\n    };\r\n    const excelOptions: ExcelOptions = {\r\n      columns: eTableColumns,\r\n      reports: this.reportData,\r\n      reportDate: `${reportDate}`,\r\n      FromDate: `${FromDate}`,\r\n      ToDate: `${ToDate}`,\r\n      title: this.Title,\r\n      rowDataGroupCols: this.reportMetaDataColumns,\r\n      ...options,\r\n    };\r\n    return { pdfOptions, excelOptions };\r\n  }\r\n}\r\n","<div class=\"m-1 float-end d-none d-lg-block\">\r\n  <button\r\n    type=\"button\"\r\n    pButton\r\n    icon=\"fa fa-print\"\r\n    iconPos=\"left\"\r\n    label=\"PRINT\"\r\n    (click)=\"print()\"\r\n    class=\"ui-button-info rounded-pill mx-2\"\r\n  ></button>\r\n  <button\r\n    type=\"button\"\r\n    pButton\r\n    icon=\"fa fa-file-pdf-o\"\r\n    iconPos=\"left\"\r\n    label=\"PDF\"\r\n    (click)=\"exportPdf()\"\r\n    class=\"ui-button-danger rounded-pill mx-2 text-white\"\r\n  ></button>\r\n  <button\r\n    type=\"button\"\r\n    pButton\r\n    icon=\"fa fa-file-excel-o\"\r\n    iconPos=\"left\"\r\n    label=\"EXCEL\"\r\n    (click)=\"exportExcel()\"\r\n    class=\"ui-button-success rounded-pill mx-2\"\r\n  ></button>\r\n</div>\r\n<div [id]=\"id\" #exportTable>\r\n  <table\r\n    class=\"d-md-table mb-0 table table-responsive-sm table-responsive-md-lg text-nowrap\"\r\n  >\r\n    <tbody>\r\n      <tr>\r\n        <td colSpan=\"{{ columns.length }}\" class=\"border-0 company_name p-0\">\r\n          <h2 class=\"m-0\">\r\n            <b>{{ reportTitle.CompanyRegName || reportTitle.CompanyName }}</b>\r\n          </h2>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td colSpan=\"{{ columns.length }}\" class=\"border-0 address p-0 pb-2\">\r\n          {{ reportTitle.Address }}\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td colSpan=\"{{ columns.length }}\" class=\"border-0 report-title\">\r\n          <b>{{ Title }}</b>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <td\r\n          *ngIf=\"FromDate\"\r\n          style=\"text-align: left\"\r\n          class=\"border-top-0 report-date pr-4\"\r\n        >\r\n          <b>From Date:</b> {{ FromDate }}\r\n        </td>\r\n        <td\r\n          *ngIf=\"ToDate\"\r\n          style=\"text-align: center\"\r\n          class=\"border-top-0 report-date pr-4\"\r\n        >\r\n          <b>To Date:</b> {{ ToDate }}\r\n        </td>\r\n        <td\r\n          colSpan=\"{{ columns.length }}\"\r\n          class=\"border-top-0 report-date pr-4\"\r\n        >\r\n          <b>{{ ReportDate.title }}: </b>\r\n          {{ currentTime | date: ReportDate.format }}\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  <lib-report-table\r\n    [reportMetaData]=\"reportMetaData\"\r\n    [devidHeight]=\"devidHeight\"\r\n    [columns]=\"columns\"\r\n    [reportData]=\"reportData\"\r\n    [reportMetaDataColumns]=\"reportMetaDataColumns\"\r\n    [emptyMessage]=\"emptyMessage\"\r\n    [fillColor]=\"fillColor\"\r\n  ></lib-report-table>\r\n</div>\r\n\r\n<!-- <ng-template #reportHeader let-classNames=\"classNames\" >\r\n  <tr>\r\n    <td colSpan=\"{{ columns.length }}\" class=\"border-0 company_name p-0\">\r\n      <h2 class=\"m-0\">\r\n        <b>{{ reportTitle.CompanyRegName }}</b>\r\n      </h2>\r\n    </td>\r\n  </tr>\r\n</ng-template> -->\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule, DatePipe } from \"@angular/common\";\r\nimport { ButtonModule } from \"primeng/button\";\r\n\r\nimport { ReportPreviewComponent } from \"./report-preview.component\";\r\nimport { ReportTableModule } from \"report-tool/modules/report-table\";\r\n\r\n@NgModule({\r\n  declarations: [ReportPreviewComponent],\r\n  imports: [CommonModule, ButtonModule, ReportTableModule],\r\n  exports: [ReportPreviewComponent],\r\n  providers: [DatePipe],\r\n})\r\nexport class ReportPreviewModule {}\r\n","/*\n * Public API Surface of report-tool\n */\nexport * from './report-preview.component';\nexport * from './report-preview.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}