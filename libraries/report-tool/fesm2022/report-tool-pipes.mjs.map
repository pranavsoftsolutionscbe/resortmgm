{"version":3,"file":"report-tool-pipes.mjs","sources":["../../../projects/report-tool/pipes/ngx-filter.pipe.ts","../../../projects/report-tool/pipes/public-api.ts","../../../projects/report-tool/pipes/report-tool-pipes.ts"],"sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n    name: \"filterBy\",\r\n    pure: false,\r\n})\r\nexport class FilterPipe implements PipeTransform {\r\n    /**\r\n     * @param {any} value\r\n     * @param {string} key\r\n     * @return {boolean}\r\n     */\r\n    static isFoundOnWalking(value: any, key: string): boolean {\r\n        let walker = value;\r\n        let found = false;\r\n        do {\r\n            if (walker.hasOwnProperty(key) || Object.getOwnPropertyDescriptor(walker, key)) {\r\n                found = true;\r\n                break;\r\n            }\r\n        } while (walker = Object.getPrototypeOf(walker));\r\n        return found;\r\n    };\r\n    /**\r\n     * @param {any} value\r\n     * @return {boolean}\r\n     */\r\n    static isNumber(value: any): boolean {\r\n        return !isNaN(parseInt(value, 10)) && isFinite(value);\r\n    };\r\n    /**\r\n     * Checks function's value if type is function otherwise same value\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    static getValue(value: any): any {\r\n        return typeof value === 'function' ? value() : value;\r\n    };\r\n    /**\r\n     * @param {?} filter\r\n     * @return {?}\r\n     */\r\n    filterByString(filter: string): any {\r\n        if (filter) {\r\n            filter = filter.toLowerCase();\r\n        }\r\n        return (value: any) => { return !filter || (value ? ('' + value).toLowerCase().indexOf(filter) !== -1 : false); };\r\n    };\r\n    /**\r\n     * @param {?} filter\r\n     * @return {?}\r\n     */\r\n    filterByBoolean(filter: boolean): any {\r\n        return (value) => { return Boolean(value) === filter; };\r\n    };\r\n    /**\r\n     * @param {?} filter\r\n     * @return {?}\r\n     */\r\n    filterByObject(filter: any): any {\r\n        var _this = this;\r\n        return (value: any) => {\r\n            for (let key in filter) {\r\n                if (key === '$or') {\r\n                    if (!_this.filterByOr(filter.$or)(FilterPipe.getValue(value))) {\r\n                        return false;\r\n                    }\r\n                    continue;\r\n                }\r\n                if (!value || !FilterPipe.isFoundOnWalking(value, key)) {\r\n                    return false;\r\n                }\r\n                if (!_this.isMatching(filter[key], FilterPipe.getValue(value[key]))) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        };\r\n    };\r\n    /**\r\n     * @param {?} filter\r\n     * @param {?} val\r\n     * @return {?}\r\n     */\r\n    isMatching(filter: any, val: any): any {\r\n        switch (typeof filter) {\r\n            case 'boolean':\r\n                return this.filterByBoolean(filter)(val);\r\n            case 'string':\r\n                return this.filterByString(filter)(val);\r\n            case 'object':\r\n                return this.filterByObject(filter)(val);\r\n        }\r\n        return this.filterDefault(filter)(val);\r\n    };\r\n    /**\r\n     * Filter value by $or\r\n     * @param {?} filter\r\n     * @return {?}\r\n     */\r\n    filterByOr(filter: any): any {\r\n        var _this = this;\r\n        return (value: any) => {\r\n            let length = filter.length;\r\n            let arrayComparison = function (i) { return value.indexOf(filter[i]) !== -1; };\r\n            let otherComparison = function (i) { return _this.isMatching(filter[i], value); };\r\n            let comparison = Array.isArray(value) ? arrayComparison : otherComparison;\r\n            for (let i = 0; i < length; i++) {\r\n                if (comparison(i)) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n    };\r\n    /**\r\n     * Default filterDefault function\r\n     * @param {?} filter\r\n     * @return {?}\r\n     */\r\n    filterDefault(filter: any): any {\r\n        return function (value) { return filter === undefined || filter == value; };\r\n    };\r\n    /**\r\n     * @param {?} array\r\n     * @param {?} filter\r\n     * @return {?}\r\n     */\r\n    transform(array: any[], filter: any): any[] {\r\n        if (!array) {\r\n            return array;\r\n        }\r\n        switch (typeof filter) {\r\n            case 'boolean':\r\n                return array.filter(this.filterByBoolean(filter));\r\n            case 'string':\r\n                if (FilterPipe.isNumber(filter)) {\r\n                    return array.filter(this.filterDefault(filter));\r\n                }\r\n                return array.filter(this.filterByString(filter));\r\n            case 'object':\r\n                return array.filter(this.filterByObject(filter));\r\n            case 'function':\r\n                return array.filter(filter);\r\n        }\r\n        return array.filter(this.filterDefault(filter));\r\n    };\r\n}\r\n\r\n@NgModule({\r\n    declarations: [FilterPipe],\r\n    imports: [CommonModule],\r\n    exports: [FilterPipe],\r\n})\r\nexport class FilterPipeModule { }","/*\n * Public API Surface of report-tool\n */\nexport * from \"./ngx-filter.pipe\";\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}